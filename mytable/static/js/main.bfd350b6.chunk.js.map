{"version":3,"sources":["App.js","Info.js","components/Table/PaginationPanel.js","components/Table/Table.js","index.js"],"names":["Info","props","style","display","backgroundColor","padding","marginBottom","width","marginRight","whiteSpace","borderLeft","paddingLeft","PaginationPanel","withNumbersQuantity","buttons","pagesQuantity","different","Math","floor","firstButton","currentPage","buttonsToShow","i","push","marginTop","paginationDiv","Pagination","first","PaginationItem","disabled","onClick","changePage","PaginationLink","tag","previous","map","el","active","key","next","last","Table","page","state","pagination","callback","setState","columns","mapColumns","subColumns","mapSubColumns","keys","setKeys","data","divideData","elementsPerPage","length","startPage","title","rows","columnProps","reduce","red","secondKeys","value","formatter","prevProps","this","table","thead","tbody","tr","td","th","div","dataToShow","alignItems","flexDirection","Object","assign","borderBottom","textAlign","rowSpan","colSpan","row","cyclic","number","styles","React","Component","fontWeight","color","fontSize","Button","variant","alert","default","second","component","cursor","userSelect","className","document","querySelector","random","secondProps","fontStyle","maxWidth","position","transition","height","borderRadius","left","paginateColumns","paginateData","pow","sqrt","toFixed","TableExample","span","interval","setInterval","x","slice","clearInterval","margin","console","log","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.bfd350b6.chunk.js","sourcesContent":["import React from 'react'\n\nimport { Button } from '@material-ui/core'\nimport Info from './Info'\nimport Table from './components/Table'\nimport Accessibility from '@material-ui/icons/Accessibility'\n\nimport './main.css'\n\nconst columns = [\n  { key: 'default', title: 'zwykÅ‚a (columnProps)', columnProps: { style: { backgroundColor: 'cyan', textAlign: 'center' } } },\n  {\n    key: 'divided',\n    title: 'dzielona',\n    columns: [\n      { key: 'first', title: 'z formatterem', formatter: (value) => <div>{value} + format</div> },\n      { key: 'second', title: 'z propsami', props: { style: { backgroundColor: 'red', fontWeight: 'bold', color: 'green', fontSize: 20 } } }\n    ]\n  },\n  { key: 'component', title: <Button color='primary' variant='contained' onClick={() => alert('click')}> Komponent</Button> }\n]\n\nconst data = [\n  {\n    default: 'click me',\n    first: 'click me',\n    second: 'click me',\n    component: 'click me',\n    props: { onClick: () => alert('funkcja w propsach dla caÅ‚ego wiersza'), style: { cursor: 'pointer' } }\n  },\n  {\n    default: <div><Accessibility /> ikona</div>,\n    first: <span\n      style={{ cursor: 'pointer', fontSize: 30, userSelect: 'none' }}\n      className='table-example__component--click'\n      onClick={() => {\n        document.querySelector('.table-example__component--click').style.color = `rgb(${Math.random() * 255},${Math.random() * 255},${Math.random() * 255})`\n      }}\n    >\n      click!\n    </span>,\n    second: `propsy dla pojedyÅ„czego okienka [key+'Props']`,\n    secondProps: { style: { fontStyle: 'italic', backgroundColor: 'grey', maxWidth: 120, color: 'black' } },\n    component:\n      <div\n        style={{ width: 140, position: 'relative' }}\n      >\n        interwaÅ‚\n        <span\n          style={{ transition: '1s', width: 20, height: 20, backgroundColor: 'green', borderRadius: '100%', position: 'absolute', left: 0 }}\n          className='table--example__span--interval'\n        />\n      </div>,\n  },\n  {\n    row: <tr key='mojwlasny'><td colSpan={4} style={{ textAlign: 'center' }}> caÅ‚y wiersz, uzyskaÅ‚em taki efekt dodajÄ…c do tablicy data kolejny obiekt z wÅ‚aÅ›ciwoÅ›ciÄ…:<br />\n      {`row: <tr key={jak nie podasz klucza - react nakrzyczy}><td colSpan={4} style={{ textAlign: 'center' }}>{TEKST}</td></tr>`}<br />\n      jeÅ¼eli chcesz zachowaÄ‡ efekt tabelki musisz dodaÄ‡ {'<tr> ...odpowiedniÄ… iloÅ›Ä‡ td lub uÅ¼ywaÄ‡ colSpan tak aby byÅ‚a zachowana iloÅ›Ä‡ kolumn</tr>'}\n    </td></tr>\n  }\n]\n\nconst paginateColumns = [\n  { title: 'Liczba', key: 'number' },\n  { title: 'PotÄ™ga', key: 'pow' },\n  { title: 'Pierwiastek', key: 'sqrt' }\n]\n\nconst paginateData = []\nfor (let i = 1; i <= 100; i++) {\n  paginateData.push({\n    number: i,\n    pow: i * i,\n    sqrt: Math.sqrt(i).toFixed(2)\n  })\n}\n\nclass TableExample extends React.Component {\n  componentDidMount() {\n    const span = document.querySelector('.table--example__span--interval')\n    this.interval = setInterval(() => {\n      const x = +span.style.left.slice(0, -2)\n      span.style.left = (x === 0 ? '100px' : '0px')\n    }, 1000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval)\n  }\n\n  render() {\n    return (\n      <div style={{ maxWidth: 1400, margin: 'auto' }}>\n        <h1 style={{ textAlign: 'center' }}>Component Table </h1>\n        <Info />\n        <div style={{ padding: 30, backgroundColor: 'white' }}>\n          <Table columns={columns} data={data} />\n          <br />\n          <h2 style={{ textAlign: 'center' }}>Paginacja</h2>\n          <Table\n            columns={paginateColumns}\n            data={paginateData}\n            pagination={{\n              elementsPerPage: 5,\n              startPage: 0,\n              callback: currentPage => console.log(currentPage),\n              buttons: {\n                first: true,\n                last: true,\n                next: true,\n                previous: true,\n                withNumbersQuantity: 5\n              }\n            }\n            }\n            cyclic={{\n              number: 2,\n              props: {\n                style: {\n                  backgroundColor: 'rgba(130,130,130,0.1)'\n                }\n              }\n            }\n            }\n          />\n\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default TableExample","import React from 'react'\n\nconst Info = props => {\n  return (\n    <div style={{ display: 'flex', backgroundColor: 'white', padding: 30, marginBottom: 30 }}>\n      <div style={{ width: '70%', marginRight: 30 }}>\n        <h4>Propsy:</h4>\n        <h5>\n          ObowiÄ…zkowe\n        <ul style={{ whiteSpace: 'pre-line' }}>\n            <li>\n              columns - tablica z nagÅ‚Ã³wkami w formacie:{'\\n'}\n              {`[\n        \\u00A0\\u00A0{\n          \\u00A0 \\u00A0\\u00A0\\u00A0title:WyÅ›wietlany tekst/ wywoÅ‚any komponent, \n          \\u00A0 \\u00A0\\u00A0\\u00A0key:klucz wg ktÃ³rego bÄ™dÄ… wczytywane dane,\n          \\u00A0 \\u00A0\\u00A0\\u00A0props(opcjonalnie):obiekt z propsami, ktÃ³ry zostanie przekazane do elementu th\n          \\u00A0 \\u00A0\\u00A0\\u00A0formatter(opcjonalnie): funkcja ktÃ³ra zostanie wywoÅ‚ana dla kaÅ¼dej komÃ³rki w kolumnie, z przekazaniem wartoÅ›ci komÃ³rki \n          \\u00A0 \\u00A0\\u00A0\\u00A0columnProps(opcjonalnie): propsy, ktÃ³re zostanÄ… przekazane do wszystkich th/td w tej kolumnie\n          \\u00A0\\u00A0},\n          \\u00A0\\u00A0...\\n\n          Istnieje moÅ¼liwoÅ›Ä‡ grupowania nagÅ‚Ã³wkÃ³w:\n          \\u00A0\\u00A0{\n            \\u00A0 \\u00A0\\u00A0\\u00A0title, \n            \\u00A0 \\u00A0\\u00A0\\u00A0key,\n            \\u00A0 \\u00A0\\u00A0\\u00A0props\n            \\u00A0 \\u00A0\\u00A0\\u00A0columns:[\n              \\u00A0 \\u00A0\\u00A0 \\u00A0\\u00A0 \\u00A0{title, key, props},\n              \\u00A0 \\u00A0\\u00A0 \\u00A0\\u00A0 \\u00A0...\n              \\u00A0 \\u00A0\\u00A0 \\u00A0]\n            \\u00A0\\u00A0},\n         ]`}\n            </li>\n            <li>\n              data - tablica z danymi do wyÅ›wietlenia w formacie: {'\\n'}\n              {`[\n           \\u00A0\\u00A0{\n            \\u00A0\\u00A0\\u00A0\\u00A0[klucz z columns]: wartoÅ›Ä‡/ wywoÅ‚any komponent,\n            \\u00A0\\u00A0\\u00A0\\u00A0[klucz z columns]: wartoÅ›Ä‡/ wywoÅ‚any komponent,\n            \\u00A0\\u00A0\\u00A0\\u00A0...\n            \\u00A0\\u00A0\\u00A0\\u00A0props(opcjonalnie): obiekt z propsami, ktÃ³ry zostanie przekazany do <tr> w <tbody> dla danego wiersza. JeÅ¼eli chcesz przekazaÄ‡ propsy dla danego pola jako wartoÅ›Ä‡ podaj komponent z propsami np <span {...props}>wartoÅ›Ä‡</span> lub:\n            \\u00A0\\u00A0\\u00A0\\u00A0[klucz_z_columns+'Props']: (np. priceProps): obiekt z propsami, ktÃ³ry zostanie przekazany do danej komÃ³rki\n            \\u00A0\\u00A0\\u00A0\\u00A0row(opcjonalnie): komponent/element, ktÃ³ry bÄ™dzie umieszczony jako caÅ‚y wiersz - pozostaÅ‚e wÅ‚aÅ›ciwoÅ›ci nie majÄ… znaczenia\n            \\u00A0\\u00A0}\n         ]`}\n            </li>\n          </ul>\n          Dodatkowe\n         <ul>\n            <li>div - propsy dla elementu div (patrz htmlowa budowa tabelki)</li>\n            <li>paginationDiv - propsy dla elementu div dotyczÄ…cego paginationPanel</li>\n            <li>table - propsy dla elementu table </li>\n            <li>thead - propsy dla elementu thead</li>\n            <li>tbody - propsy dla elementu tbody</li>\n            <li>tr - propsy dla wszystkich elementÃ³w tr</li>\n            <li>th - propsy dla wszystkich elementÃ³w th </li>\n            <li>td - propsy dla wszystkich elementÃ³w td</li>\n            <li>cyclic: obiekt z dwoma wÅ‚aÅ›ciwoÅ›ciami: {'{number(liczba), props(obiekt)}'} - propsy, ktÃ³re zostanÄ… przekazane do co <i>{'{number}'}</i> elementu tr w tbody (patrz przykÅ‚ad paginacja, number = 2) </li>\n            <li>...sukcesywnie bÄ™de dodawaÄ‡ kolejne funkcjonalnoÅ›ci...</li>\n          </ul>\n          Paginacja\n          <br />\n          Aby wÅ‚Ä…czyÄ‡ paginacjÄ™ naleÅ¼y przekazaÄ‡ propsa 'pagination', ktÃ³ry jest obiektem z wÅ‚aÅ›ciwoÅ›ciami:\n          <ul>\n            <li>elementsPerPage:{'{number}'} - iloÅ›Ä‡ elementÃ³w na strone (domyÅ›lnie 10)</li>\n            <li>startPage:{'{number}'} - poczÄ…tkowa strona, INDEX STRONY tzn. index 0 - strona 1 itd.. (domyÅ›lnie 0)</li>\n            <li>callback(opcjonalnie): {'{function}'} - funkcja, ktÃ³ra zostanie wywowÅ‚ana za kaÅ¼dÄ… zmianÄ… z przekazaniem indexu aktualnej strony</li>\n            <li>buttons: {'{object}'} - obiekt z konfiguracjÄ… przyciskÃ³w w panelu, wÅ‚aÅ›ciwoÅ›ci: first:boolean, last:boolean, next:boolean, previous:boolean, withNumbersQuantity:number(iloÅ›Ä‡ przyciskÃ³w z numerami stron do wyÅ›wietlenia - domyÅ›lnie 5 )</li>\n          </ul>\n        </h5>\n      </div>\n      <div style={{ borderLeft: '1px solid black', paddingLeft: 20 }}>\n        <h4>Htmlowa budowa tabelki:</h4>\n        <h5 style={{ whiteSpace: 'pre-line' }}>\n          {`\n      <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n      \\u00A0\\u00A0<table>\n      \\u00A0\\u00A0\\u00A0\\u00A0<thead>\n      \\u00A0\\u00A0 \\u00A0\\u00A0\\u00A0\\u00A0<tr>\n      \\u00A0\\u00A0 \\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0<th>\n      \\u00A0\\u00A0 \\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0{columns.title}\n       \\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0</th>\n      \\u00A0\\u00A0 \\u00A0\\u00A0\\u00A0\\u00A0</tr>\n      \\u00A0\\u00A0 \\u00A0\\u00A0</thead>\n      \\u00A0\\u00A0 \\u00A0\\u00A0<tbody>\n      \\u00A0\\u00A0 \\u00A0\\u00A0\\u00A0\\u00A0<tr>\n      \\u00A0\\u00A0 \\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0<td>\n      \\u00A0\\u00A0 \\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0{data}\n      \\u00A0\\u00A0 \\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0</td>\n      \\u00A0\\u00A0 \\u00A0\\u00A0\\u00A0\\u00A0</tr>\n      \\u00A0\\u00A0 \\u00A0\\u00A0</tbody>\n      \\u00A0\\u00A0 </table>\n      \\u00A0\\u00A0 <div style={{marginTop: 30px}} {pagination panel} />\n       </div>\n       `}\n        </h5>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Info","import React from 'react'\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nconst PaginationPanel = props => {\n  let withNumbersQuantity = props.buttons.withNumbersQuantity || 5\n  if (withNumbersQuantity > props.pagesQuantity) withNumbersQuantity = props.pagesQuantity\n\n  const different = Math.floor(withNumbersQuantity / 2)\n  let firstButton = props.currentPage - different\n  if (firstButton < 0) firstButton = 0\n  if (firstButton + withNumbersQuantity > props.pagesQuantity) firstButton = props.pagesQuantity - withNumbersQuantity\n\n  const buttonsToShow = []\n  for (let i = 0; i < withNumbersQuantity; i++) {\n    buttonsToShow.push(firstButton + 1 + i)\n  }\n\n  return (\n    <div style={{ marginTop: 30 }} {...props.paginationDiv}>\n\n      <Pagination>\n        {props.buttons.first &&\n          <PaginationItem\n            disabled={props.currentPage === 0}\n            onClick={() => props.changePage(0)}\n          >\n            <PaginationLink first tag=\"button\" />\n          </PaginationItem>\n        }\n        {props.buttons.previous &&\n          <PaginationItem\n            disabled={props.currentPage === 0}\n            onClick={() => props.changePage(props.currentPage - 1)}\n          >\n            <PaginationLink previous tag=\"button\" />\n          </PaginationItem>\n        }\n        {buttonsToShow.map(el => (\n          <PaginationItem\n            active={el - 1 === props.currentPage}\n            onClick={() => props.changePage(el - 1)}\n            key={el}\n          >\n            <PaginationLink tag=\"button\">\n              {el}\n            </PaginationLink>\n          </PaginationItem>\n        ))}\n\n        {props.buttons.next &&\n          <PaginationItem\n            disabled={props.currentPage === props.pagesQuantity - 1}\n            onClick={() => props.changePage(props.currentPage + 1)}\n          >\n            <PaginationLink next tag=\"button\" />\n          </PaginationItem>\n        }\n        {props.buttons.last &&\n          <PaginationItem\n            disabled={props.currentPage === props.pagesQuantity - 1}\n            onClick={() => props.changePage(props.pagesQuantity - 1)}\n          >\n            <PaginationLink last tag=\"button\" />\n          </PaginationItem>\n        }\n      </Pagination>\n    </div>\n  )\n}\n\nexport default PaginationPanel","import './Table.css'\nimport React from 'react'\n\nimport PaginationPanel from './PaginationPanel'\n\nclass Table extends React.Component {\n  constructor(props) {\n    super()\n\n    const columns = this.mapColumns(props.columns)\n    const subColumns = this.mapSubColumns(props.columns)\n    const keys = this.setKeys(props.columns)\n    const data = props.pagination ? this.divideData(props.data, props.pagination.elementsPerPage) : [props.data]\n\n    this.state = {\n      columns,\n      subColumns,\n      keys,\n      data,\n      pagination: !!props.pagination,\n      pagesQuantity: data.length,\n      currentPage: props.pagination ? (props.pagination.startPage || 0) : 0,\n    }\n  }\n\n  mapColumns(columns) {\n    return columns.map(el => (\n      {\n        title: el.title,\n        key: el.key,\n        rows: el.columns ? 1 : 2,\n        columns: el.columns ? el.columns.length : 1,\n        columnProps: el.columnProps\n      }\n    ))\n  }\n\n  mapSubColumns(columns) {\n    return columns.reduce((red, el) => {\n      if (el.columns) {\n        return [...red, ...el.columns]\n      }\n      return red\n    }, [])\n  }\n\n  setKeys(columns) {\n    return columns.reduce((red, el) => {\n      if (el.columns) {\n        const secondKeys = el.columns.map(el => ({ value: el.key, formatter: el.formatter, columnProps: el.columnProps }))\n        return [...red, ...secondKeys]\n      }\n      return [...red, { value: el.key, formatter: el.formatter, columnProps: el.columnProps }]\n    }, [])\n  }\n\n  divideData(data, length = 10) {\n    return data.reduce((red, el) => {\n      if (red[red.length - 1].length >= length) {\n        return [...red, [el]]\n      }\n      red[red.length - 1].push(el)\n      return red\n    }, [[]])\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.columns !== this.props.columns ||\n      prevProps.data !== this.props.data ||\n      prevProps.columns.length !== this.props.columns.length ||\n      prevProps.data.length !== this.props.data.length ||\n      prevProps.data[prevProps.data.length - 1] !== this.props.data[this.props.data.length - 1]\n    ) {\n      const columns = this.mapColumns(this.props.columns)\n      const subColumns = this.mapSubColumns(this.props.columns)\n      const keys = this.setKeys(this.props.columns)\n      const data = this.props.pagination ? this.divideData(this.props.data, this.props.pagination.elementsPerPage) : [this.props.data]\n\n      this.setState({\n        columns,\n        subColumns,\n        keys,\n        data,\n        pagination: !!this.props.pagination,\n        pagesQuantity: data.length,\n        currentPage: this.props.pagination ? (this.props.pagination.startPage || 0) : 0\n      })\n    }\n\n  }\n\n  changePage = (page = 0) => {\n    if (page < 0 || page > this.state.pagesQuantity - 1) return\n    if (this.props.pagination && typeof this.props.pagination.callback === 'function') this.props.pagination.callback(page)\n    this.setState({ currentPage: page })\n  }\n\n\n  render() {\n    const { table, thead, tbody, tr, td, th, div, paginationDiv, pagination } = this.props\n    const dataToShow = this.state.data[this.state.currentPage]\n\n    return (\n      <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }} {...div}>\n        <table {...table}>\n          <thead {...thead}>\n            <tr {...tr}>\n              {this.state.columns.map(el => {\n                return <th\n                  key={el.key || el.title}\n                  {...th}\n                  {...el.columnProps}\n                  {...el.props}\n                  style={Object.assign((el.rows === 1 ? { borderBottom: 'none', textAlign: 'center' } : {}), th && th.style, el.columnProps && el.columnProps.style, el.props && el.props.style)}\n                  rowSpan={el.rows}\n                  colSpan={el.columns}\n                >\n                  {el.title}\n                </th>\n              })}\n            </tr>\n            {!!this.state.subColumns.length &&\n              <tr {...tr}>\n                {this.state.subColumns.map(el => (\n                  <th\n                    key={el.key || el.title}\n                    {...th}\n                    {...el.columnProps}\n                    {...el.props}\n                    style={Object.assign({}, th && th.style, el.columnProps && el.columnProps.style, el.props && el.props.style)}\n                  >\n                    {el.title}\n                  </th>\n                ))}\n              </tr>\n            }\n          </thead>\n          <tbody {...tbody}>\n            {dataToShow.map((el, i) => (\n              el.row ||\n              <tr\n                key={'column-' + i}\n                {...tr}\n                {...el.props}\n                {...Object.assign({}, this.props.cyclic && i % this.props.cyclic.number === 0 && this.props.cyclic.props)}\n                style={Object.assign({}, tr && tr.styles, this.props.cyclic && i % this.props.cyclic.number === 0 && this.props.cyclic.props && this.props.cyclic.props.style, el.props && el.props.style)}\n              >\n                {this.state.keys.map(key => (\n                  <td\n                    key={key.value + '-' + i}\n                    {...td}\n                    {...key.columnProps}\n                    {...el[key.value + 'Props']}\n                    style={Object.assign({}, td && td.styles, key.columnProps && key.columnProps.style, el[key.value + 'Props'] && el[key.value + 'Props'].style)}\n                  >\n                    {key.formatter ? key.formatter(el[key.value]) : el[key.value]}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {this.state.pagination && this.state.pagesQuantity > 1 &&\n          <PaginationPanel\n            paginationDiv={paginationDiv}\n            pagesQuantity={this.state.pagesQuantity}\n            currentPage={this.state.currentPage}\n            changePage={this.changePage}\n            {...pagination}\n          />}\n      </div>\n    )\n  }\n}\n\nexport default Table","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}